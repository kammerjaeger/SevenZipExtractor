// <auto-generated/>

using SharpGen.Runtime;

namespace SevenZipExtractor.LibAdapter
{
    class IArchiveExtractCallbackShadow : SevenZipExtractor.LibAdapter.IProgressShadow
    {
        protected unsafe class IArchiveExtractCallbackVtbl : SevenZipExtractor.LibAdapter.IProgressShadow.IProgressVtbl
        {
            public IArchiveExtractCallbackVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 3)
            {
                AddMethod(new GetStreamDelegate(GetStream));
                AddMethod(new PrepareOperationDelegate(PrepareOperation));
                AddMethod(new SetOperationResultDelegate(SetOperationResult));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetStreamDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1, int arg2);
            private static unsafe int GetStream(System.IntPtr thisObject, System.UInt32 param0, void *param1, int param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    ref System.IntPtr outStream_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param1);
                    SevenZipExtractor.LibAdapter.ISequentialOutStream outStream;
                    SevenZipExtractor.LibAdapter.AskMode askExtractMode = default (SevenZipExtractor.LibAdapter.AskMode);
                    askExtractMode = (SevenZipExtractor.LibAdapter.AskMode)param2;
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    __result__ = @this.GetStream(index, out outStream, askExtractMode);
                    outStream_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.ISequentialOutStream>(outStream);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int PrepareOperationDelegate(System.IntPtr thisObject, int arg0);
            private static unsafe int PrepareOperation(System.IntPtr thisObject, int param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    SevenZipExtractor.LibAdapter.AskMode askExtractMode = default (SevenZipExtractor.LibAdapter.AskMode);
                    askExtractMode = (SevenZipExtractor.LibAdapter.AskMode)param0;
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    __result__ = @this.PrepareOperation(askExtractMode);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetOperationResultDelegate(System.IntPtr thisObject, int arg0);
            private static unsafe int SetOperationResult(System.IntPtr thisObject, int param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    SevenZipExtractor.LibAdapter.OperationResult opRes = default (SevenZipExtractor.LibAdapter.OperationResult);
                    opRes = (SevenZipExtractor.LibAdapter.OperationResult)param0;
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    __result__ = @this.SetOperationResult(opRes);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveExtractCallback @this = (IArchiveExtractCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow.IArchiveExtractCallbackVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IArchiveExtractCallbackShadow))]
    public partial interface IArchiveExtractCallback : SevenZipExtractor.LibAdapter.IProgress
    {
        System.Int32 GetStream(System.UInt32 index, out SevenZipExtractor.LibAdapter.ISequentialOutStream outStream, SevenZipExtractor.LibAdapter.AskMode askExtractMode);
        System.Int32 PrepareOperation(SevenZipExtractor.LibAdapter.AskMode askExtractMode);
        System.Int32 SetOperationResult(SevenZipExtractor.LibAdapter.OperationResult opRes);
    }

    class IArchiveExtractCallbackMessageShadow : SevenZipExtractor.LibAdapter.IProgressShadow
    {
        protected unsafe class IArchiveExtractCallbackMessageVtbl : SevenZipExtractor.LibAdapter.IProgressShadow.IProgressVtbl
        {
            public IArchiveExtractCallbackMessageVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new ReportExtractResultDelegate(ReportExtractResult));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int ReportExtractResultDelegate(System.IntPtr thisObject, int arg0, System.UInt32 arg1, int arg2);
            private static unsafe int ReportExtractResult(System.IntPtr thisObject, int param0, System.UInt32 param1, int param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    SevenZipExtractor.LibAdapter.NEventIndexType indexType = default (SevenZipExtractor.LibAdapter.NEventIndexType);
                    indexType = (SevenZipExtractor.LibAdapter.NEventIndexType)param0;
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param1;
                    SevenZipExtractor.LibAdapter.OperationResult opRes = default (SevenZipExtractor.LibAdapter.OperationResult);
                    opRes = (SevenZipExtractor.LibAdapter.OperationResult)param2;
                    IArchiveExtractCallbackMessage @this = (IArchiveExtractCallbackMessage)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackMessageShadow>(thisObject).Callback;
                    __result__ = @this.ReportExtractResult(indexType, index, opRes);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveExtractCallbackMessage @this = (IArchiveExtractCallbackMessage)ToShadow<SevenZipExtractor.LibAdapter.IArchiveExtractCallbackMessageShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IArchiveExtractCallbackMessageShadow.IArchiveExtractCallbackMessageVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IArchiveExtractCallbackMessageShadow))]
    public partial interface IArchiveExtractCallbackMessage : SevenZipExtractor.LibAdapter.IProgress
    {
        System.Int32 ReportExtractResult(SevenZipExtractor.LibAdapter.NEventIndexType indexType, System.UInt32 index, SevenZipExtractor.LibAdapter.OperationResult opRes);
    }

    class IArchiveOpenCallbackShadow : ComObjectShadow
    {
        protected unsafe class IArchiveOpenCallbackVtbl : ComObjectShadow.ComObjectVtbl
        {
            public IArchiveOpenCallbackVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 2)
            {
                AddMethod(new SetTotalDelegate(SetTotal));
                AddMethod(new SetCompletedDelegate(SetCompleted));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetTotalDelegate(System.IntPtr thisObject, void *arg0, void *arg1);
            private static unsafe int SetTotal(System.IntPtr thisObject, void *param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt64? files = param0 != null ? System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param0) : null;
                    System.UInt64? bytes = param1 != null ? System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param1) : null;
                    IArchiveOpenCallback @this = (IArchiveOpenCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow>(thisObject).Callback;
                    __result__ = @this.SetTotal(files, bytes);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveOpenCallback @this = (IArchiveOpenCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetCompletedDelegate(System.IntPtr thisObject, void *arg0, void *arg1);
            private static unsafe int SetCompleted(System.IntPtr thisObject, void *param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt64? files = param0 != null ? System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param0) : null;
                    System.UInt64? bytes = param1 != null ? System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param1) : null;
                    IArchiveOpenCallback @this = (IArchiveOpenCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow>(thisObject).Callback;
                    __result__ = @this.SetCompleted(files, bytes);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveOpenCallback @this = (IArchiveOpenCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow.IArchiveOpenCallbackVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IArchiveOpenCallbackShadow))]
    public partial interface IArchiveOpenCallback : SharpGen.Runtime.IUnknown
    {
        System.Int32 SetTotal(System.UInt64? files, System.UInt64? bytes);
        System.Int32 SetCompleted(System.UInt64? files, System.UInt64? bytes);
    }

    public partial class IArchiveOpenSeq : ComObject
    {
        public IArchiveOpenSeq(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator IArchiveOpenSeq(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new IArchiveOpenSeq(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "stream">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IArchiveOpenSeq::OpenSeq([In] ISequentialInStream* stream)</unmanaged>
        /// <unmanaged-short>IArchiveOpenSeq::OpenSeq</unmanaged-short>
        public unsafe System.Int32 OpenSeq(SevenZipExtractor.LibAdapter.ISequentialInStream stream)
        {
            System.IntPtr stream_ = System.IntPtr.Zero;
            System.Int32 __result__;
            stream_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.ISequentialInStream>(stream);
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, (void *)stream_, (*(void ***)this._nativePointer)[3 + SevenZipHandle.FuncOffset]);
            System.GC.KeepAlive(stream);
            return __result__;
        }
    }

    class IArchiveOpenVolumeCallbackShadow : ComObjectShadow
    {
        protected unsafe class IArchiveOpenVolumeCallbackVtbl : ComObjectShadow.ComObjectVtbl
        {
            public IArchiveOpenVolumeCallbackVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 2)
            {
                AddMethod(new GetPropertyDelegate(GetProperty));
                AddMethod(new GetStreamDelegate(GetStream));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetPropertyDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1);
            private static unsafe int GetProperty(System.IntPtr thisObject, System.UInt32 param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    SevenZipExtractor.LibAdapter.ItemPropId propID = default (SevenZipExtractor.LibAdapter.ItemPropId);
                    propID = (SevenZipExtractor.LibAdapter.ItemPropId)param0;
                    ref SevenZipExtractor.LibAdapter.PropVariant value = ref System.Runtime.CompilerServices.Unsafe.AsRef<SevenZipExtractor.LibAdapter.PropVariant>(param1);
                    IArchiveOpenVolumeCallback @this = (IArchiveOpenVolumeCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow>(thisObject).Callback;
                    __result__ = @this.GetProperty(propID, ref value);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveOpenVolumeCallback @this = (IArchiveOpenVolumeCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetStreamDelegate(System.IntPtr thisObject, void *arg0, void *arg1);
            private static unsafe int GetStream(System.IntPtr thisObject, void *param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.String name = default (System.String);
                    System.IntPtr name_ = (System.IntPtr)param0;
                    ref System.IntPtr inStream_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param1);
                    SevenZipExtractor.LibAdapter.IInStream inStream;
                    IArchiveOpenVolumeCallback @this = (IArchiveOpenVolumeCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow>(thisObject).Callback;
                    name = System.Runtime.InteropServices.Marshal.PtrToStringUni(name_);
                    __result__ = @this.GetStream(name, out inStream);
                    inStream_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.IInStream>(inStream);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IArchiveOpenVolumeCallback @this = (IArchiveOpenVolumeCallback)ToShadow<SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow.IArchiveOpenVolumeCallbackVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IArchiveOpenVolumeCallbackShadow))]
    public partial interface IArchiveOpenVolumeCallback : SharpGen.Runtime.IUnknown
    {
        System.Int32 GetProperty(SevenZipExtractor.LibAdapter.ItemPropId propID, ref SevenZipExtractor.LibAdapter.PropVariant value);
        System.Int32 GetStream(System.String name, out SevenZipExtractor.LibAdapter.IInStream inStream);
    }

    class ICompressCodecsInfoShadow : ComObjectShadow
    {
        protected unsafe class ICompressCodecsInfoVtbl : ComObjectShadow.ComObjectVtbl
        {
            public ICompressCodecsInfoVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 4)
            {
                AddMethod(new GetNumMethodsDelegate(GetNumMethods));
                AddMethod(new GetPropertyDelegate(GetProperty));
                AddMethod(new CreateDecoderDelegate(CreateDecoder));
                AddMethod(new CreateEncoderDelegate(CreateEncoder));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetNumMethodsDelegate(System.IntPtr thisObject, void *arg0);
            private static unsafe int GetNumMethods(System.IntPtr thisObject, void *param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    ref System.UInt32 numMethods = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt32>(param0);
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    __result__ = @this.GetNumMethods(out numMethods);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetPropertyDelegate(System.IntPtr thisObject, System.UInt32 arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int GetProperty(System.IntPtr thisObject, System.UInt32 param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    SevenZipExtractor.LibAdapter.NMethodPropID propID = default (SevenZipExtractor.LibAdapter.NMethodPropID);
                    propID = (SevenZipExtractor.LibAdapter.NMethodPropID)param1;
                    ref SevenZipExtractor.LibAdapter.PropVariant value = ref System.Runtime.CompilerServices.Unsafe.AsRef<SevenZipExtractor.LibAdapter.PropVariant>(param2);
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    __result__ = @this.GetProperty(index, propID, ref value);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int CreateDecoderDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1, void *arg2);
            private static unsafe int CreateDecoder(System.IntPtr thisObject, System.UInt32 param0, void *param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    System.Guid iid = System.Runtime.CompilerServices.Unsafe.AsRef<System.Guid>(param1);
                    ref System.IntPtr coder = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param2);
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    __result__ = @this.CreateDecoder(index, iid, ref coder);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int CreateEncoderDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1, void *arg2);
            private static unsafe int CreateEncoder(System.IntPtr thisObject, System.UInt32 param0, void *param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    System.Guid iid = System.Runtime.CompilerServices.Unsafe.AsRef<System.Guid>(param1);
                    ref System.IntPtr coder = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param2);
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    __result__ = @this.CreateEncoder(index, iid, ref coder);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ICompressCodecsInfo @this = (ICompressCodecsInfo)ToShadow<SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow.ICompressCodecsInfoVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.ICompressCodecsInfoShadow))]
    public partial interface ICompressCodecsInfo : SharpGen.Runtime.IUnknown
    {
        System.Int32 GetNumMethods(out System.UInt32 numMethods);
        System.Int32 GetProperty(System.UInt32 index, SevenZipExtractor.LibAdapter.NMethodPropID propID, ref SevenZipExtractor.LibAdapter.PropVariant value);
        System.Int32 CreateDecoder(System.UInt32 index, System.Guid iid, ref System.IntPtr coder);
        System.Int32 CreateEncoder(System.UInt32 index, System.Guid iid, ref System.IntPtr coder);
    }

    public partial class ICompressCodecsInfoNative : ComObject, SevenZipExtractor.LibAdapter.ICompressCodecsInfo
    {
        public ICompressCodecsInfoNative(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator ICompressCodecsInfoNative(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new ICompressCodecsInfoNative(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "numMethods">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG ICompressCodecsInfo::GetNumMethods([Out] unsigned int* numMethods)</unmanaged>
        /// <unmanaged-short>ICompressCodecsInfo::GetNumMethods</unmanaged-short>
        public unsafe System.Int32 GetNumMethods(out System.UInt32 numMethods)
        {
            System.Int32 __result__;
            fixed (void *numMethods_ = &numMethods)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, numMethods_, (*(void ***)this._nativePointer)[3 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "propID">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG ICompressCodecsInfo::GetProperty([In] unsigned int index,[In] PROPID propID,[InOut] PROPVARIANT* value)</unmanaged>
        /// <unmanaged-short>ICompressCodecsInfo::GetProperty</unmanaged-short>
        public unsafe System.Int32 GetProperty(System.UInt32 index, SevenZipExtractor.LibAdapter.NMethodPropID propID, ref SevenZipExtractor.LibAdapter.PropVariant value)
        {
            System.Int32 __result__;
            fixed (void *value_ = &value)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, unchecked ((System.UInt32)propID), value_, (*(void ***)this._nativePointer)[4 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "iid">No documentation.</param>
        /// <param name = "coder">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG ICompressCodecsInfo::CreateDecoder([In] unsigned int index,[In] const GUID* iid,[InOut] void** coder)</unmanaged>
        /// <unmanaged-short>ICompressCodecsInfo::CreateDecoder</unmanaged-short>
        public unsafe System.Int32 CreateDecoder(System.UInt32 index, System.Guid iid, ref System.IntPtr coder)
        {
            System.Int32 __result__;
            fixed (void *coder_ = &coder)
                __result__ = LocalInterop.CalliStdCallint(this._nativePointer, index, &iid, coder_, (*(void ***)this._nativePointer)[5 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "iid">No documentation.</param>
        /// <param name = "coder">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG ICompressCodecsInfo::CreateEncoder([In] unsigned int index,[In] const GUID* iid,[InOut] void** coder)</unmanaged>
        /// <unmanaged-short>ICompressCodecsInfo::CreateEncoder</unmanaged-short>
        public unsafe System.Int32 CreateEncoder(System.UInt32 index, System.Guid iid, ref System.IntPtr coder)
        {
            System.Int32 __result__;
            fixed (void *coder_ = &coder)
                __result__ = LocalInterop.CalliStdCallint(this._nativePointer, index, &iid, coder_, (*(void ***)this._nativePointer)[6 + SevenZipHandle.FuncOffset]);
            return __result__;
        }
    }

    class ICryptoGetTextPasswordShadow : ComObjectShadow
    {
        protected unsafe class ICryptoGetTextPasswordVtbl : ComObjectShadow.ComObjectVtbl
        {
            public ICryptoGetTextPasswordVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new CryptoGetTextPasswordDelegate(CryptoGetTextPassword));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int CryptoGetTextPasswordDelegate(System.IntPtr thisObject, void *arg0);
            private static unsafe int CryptoGetTextPassword(System.IntPtr thisObject, void *param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.String asswordRef = default (System.String);
                    System.IntPtr asswordRef_ = (System.IntPtr)param0;
                    ICryptoGetTextPassword @this = (ICryptoGetTextPassword)ToShadow<SevenZipExtractor.LibAdapter.ICryptoGetTextPasswordShadow>(thisObject).Callback;
                    asswordRef = System.Runtime.InteropServices.Marshal.PtrToStringUni(asswordRef_);
                    __result__ = @this.CryptoGetTextPassword(asswordRef);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ICryptoGetTextPassword @this = (ICryptoGetTextPassword)ToShadow<SevenZipExtractor.LibAdapter.ICryptoGetTextPasswordShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.ICryptoGetTextPasswordShadow.ICryptoGetTextPasswordVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.ICryptoGetTextPasswordShadow))]
    public partial interface ICryptoGetTextPassword : SharpGen.Runtime.IUnknown
    {
        System.Int32 CryptoGetTextPassword(System.String asswordRef);
    }

    public partial class IHasher : ComObject
    {
        public IHasher(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator IHasher(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new IHasher(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetDigestSize</unmanaged>
        /// <unmanaged-short>GetDigestSize</unmanaged-short>
        public System.UInt32 DigestSize
        {
            get => GetDigestSize();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>void IHasher::Init()</unmanaged>
        /// <unmanaged-short>IHasher::Init</unmanaged-short>
        public unsafe void Init()
        {
            SevenZipExtractor.LocalInterop.CalliStdCallvoid(this._nativePointer, (*(void ***)this._nativePointer)[3 + SevenZipHandle.FuncOffset]);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "data">No documentation.</param>
        /// <param name = "size">No documentation.</param>
        /// <unmanaged>void IHasher::Update([In] const void* data,[In] unsigned int size)</unmanaged>
        /// <unmanaged-short>IHasher::Update</unmanaged-short>
        public unsafe void Update(System.IntPtr data, System.UInt32 size)
        {
            SevenZipExtractor.LocalInterop.CalliStdCallvoid(this._nativePointer, (void *)data, size, (*(void ***)this._nativePointer)[4 + SevenZipHandle.FuncOffset]);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "digest">No documentation.</param>
        /// <unmanaged>void IHasher::Final([Buffer] unsigned char* digest)</unmanaged>
        /// <unmanaged-short>IHasher::Final</unmanaged-short>
        public unsafe void Final(System.Byte[] digest)
        {
            fixed (void *digest_ = digest)
                SevenZipExtractor.LocalInterop.CalliStdCallvoid(this._nativePointer, digest_, (*(void ***)this._nativePointer)[5 + SevenZipHandle.FuncOffset]);
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int IHasher::GetDigestSize()</unmanaged>
        /// <unmanaged-short>IHasher::GetDigestSize</unmanaged-short>
        internal unsafe System.UInt32 GetDigestSize()
        {
            System.UInt32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallSystemUInt32(this._nativePointer, (*(void ***)this._nativePointer)[6 + SevenZipHandle.FuncOffset]);
            return __result__;
        }
    }

    class IHashersShadow : ComObjectShadow
    {
        protected unsafe class IHashersVtbl : ComObjectShadow.ComObjectVtbl
        {
            public IHashersVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 3)
            {
                AddMethod(new GetNumHashersDelegate(GetNumHashers));
                AddMethod(new GetHasherPropDelegate(GetHasherProp));
                AddMethod(new CreateHasherDelegate(CreateHasher));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate System.UInt32 GetNumHashersDelegate(System.IntPtr thisObject);
            private static unsafe System.UInt32 GetNumHashers(System.IntPtr thisObject)
            {
                try
                {
                    System.UInt32 __result__ = default (System.UInt32);
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    __result__ = @this.GetNumHashers();
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.UInt32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetHasherPropDelegate(System.IntPtr thisObject, System.UInt32 arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int GetHasherProp(System.IntPtr thisObject, System.UInt32 param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    SevenZipExtractor.LibAdapter.NMethodPropID propID = default (SevenZipExtractor.LibAdapter.NMethodPropID);
                    propID = (SevenZipExtractor.LibAdapter.NMethodPropID)param1;
                    ref SevenZipExtractor.LibAdapter.PropVariant value = ref System.Runtime.CompilerServices.Unsafe.AsRef<SevenZipExtractor.LibAdapter.PropVariant>(param2);
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    __result__ = @this.GetHasherProp(index, propID, ref value);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int CreateHasherDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1);
            private static unsafe int CreateHasher(System.IntPtr thisObject, System.UInt32 param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    ref System.IntPtr hasher_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param1);
                    SevenZipExtractor.LibAdapter.IHasher hasher;
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    __result__ = @this.CreateHasher(index, out hasher);
                    hasher_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.IHasher>(hasher);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IHashers @this = (IHashers)ToShadow<SevenZipExtractor.LibAdapter.IHashersShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IHashersShadow.IHashersVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IHashersShadow))]
    public partial interface IHashers : SharpGen.Runtime.IUnknown
    {
        System.UInt32 GetNumHashers();
        System.Int32 GetHasherProp(System.UInt32 index, SevenZipExtractor.LibAdapter.NMethodPropID propID, ref SevenZipExtractor.LibAdapter.PropVariant value);
        System.Int32 CreateHasher(System.UInt32 index, out SevenZipExtractor.LibAdapter.IHasher hasher);
    }

    public partial class IHashersNative : ComObject, IHashers
    {
        public IHashersNative(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator IHashersNative(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new IHashersNative(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>GetNumHashers</unmanaged>
        /// <unmanaged-short>GetNumHashers</unmanaged-short>
        public System.UInt32 NumHashers
        {
            get => GetNumHashers();
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>unsigned int IHashers::GetNumHashers()</unmanaged>
        /// <unmanaged-short>IHashers::GetNumHashers</unmanaged-short>
        public unsafe System.UInt32 GetNumHashers()
        {
            System.UInt32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallSystemUInt32(this._nativePointer, (*(void ***)this._nativePointer)[3 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "propID">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IHashers::GetHasherProp([In] unsigned int index,[In] PROPID propID,[InOut] PROPVARIANT* value)</unmanaged>
        /// <unmanaged-short>IHashers::GetHasherProp</unmanaged-short>
        public unsafe System.Int32 GetHasherProp(System.UInt32 index, SevenZipExtractor.LibAdapter.NMethodPropID propID, ref SevenZipExtractor.LibAdapter.PropVariant value)
        {
            System.Int32 __result__;
            fixed (void *value_ = &value)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, unchecked ((System.UInt32)propID), value_, (*(void ***)this._nativePointer)[4 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "hasher">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IHashers::CreateHasher([In] unsigned int index,[In] IHasher** hasher)</unmanaged>
        /// <unmanaged-short>IHashers::CreateHasher</unmanaged-short>
        public unsafe System.Int32 CreateHasher(System.UInt32 index, out SevenZipExtractor.LibAdapter.IHasher hasher)
        {
            System.IntPtr hasher_ = System.IntPtr.Zero;
            System.Int32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, &hasher_, (*(void ***)this._nativePointer)[5 + SevenZipHandle.FuncOffset]);
            if (hasher_ != System.IntPtr.Zero)
                hasher = new SevenZipExtractor.LibAdapter.IHasher(hasher_);
            else
                hasher = null;
            return __result__;
        }
    }

    public partial class IInArchive : ComObject
    {
        public IInArchive(System.IntPtr nativePtr): base (nativePtr)
        {
        }

        public static explicit operator IInArchive(System.IntPtr nativePtr) => nativePtr == System.IntPtr.Zero ? null : new IInArchive(nativePtr);
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "stream">No documentation.</param>
        /// <param name = "maxCheckStartPosition">No documentation.</param>
        /// <param name = "openCallback">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::Open([In] IInStream* stream,[In] const unsigned longlong* maxCheckStartPosition,[In] IArchiveOpenCallback* openCallback)</unmanaged>
        /// <unmanaged-short>IInArchive::Open</unmanaged-short>
        public unsafe System.Int32 Open(SevenZipExtractor.LibAdapter.IInStream stream, System.UInt64 maxCheckStartPosition, SevenZipExtractor.LibAdapter.IArchiveOpenCallback openCallback)
        {
            System.IntPtr stream_ = System.IntPtr.Zero;
            System.IntPtr openCallback_ = System.IntPtr.Zero;
            System.Int32 __result__;
            stream_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.IInStream>(stream);
            openCallback_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.IArchiveOpenCallback>(openCallback);
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, (void *)stream_, &maxCheckStartPosition, (void *)openCallback_, (*(void ***)this._nativePointer)[3 + SevenZipHandle.FuncOffset]);
            System.GC.KeepAlive(stream);
            System.GC.KeepAlive(openCallback);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::Close()</unmanaged>
        /// <unmanaged-short>IInArchive::Close</unmanaged-short>
        public unsafe System.Int32 Close()
        {
            System.Int32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, (*(void ***)this._nativePointer)[4 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "numItems">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetNumberOfItems([InOut] unsigned int* numItems)</unmanaged>
        /// <unmanaged-short>IInArchive::GetNumberOfItems</unmanaged-short>
        public unsafe System.Int32 GetNumberOfItems(ref System.UInt32 numItems)
        {
            System.Int32 __result__;
            fixed (void *numItems_ = &numItems)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, numItems_, (*(void ***)this._nativePointer)[5 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "propID">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetProperty([In] unsigned int index,[In] PROPID propID,[InOut] PROPVARIANT* value)</unmanaged>
        /// <unmanaged-short>IInArchive::GetProperty</unmanaged-short>
        public unsafe System.Int32 GetProperty(System.UInt32 index, SevenZipExtractor.LibAdapter.ItemPropId propID, ref SevenZipExtractor.LibAdapter.PropVariant value)
        {
            System.Int32 __result__;
            fixed (void *value_ = &value)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, unchecked ((System.UInt32)propID), value_, (*(void ***)this._nativePointer)[6 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "indices">No documentation.</param>
        /// <param name = "numItems">No documentation.</param>
        /// <param name = "testMode">No documentation.</param>
        /// <param name = "extractCallback">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::Extract([In, Buffer] const unsigned int* indices,[In] unsigned int numItems,[In] int testMode,[In] IArchiveExtractCallback* extractCallback)</unmanaged>
        /// <unmanaged-short>IInArchive::Extract</unmanaged-short>
        public unsafe System.Int32 Extract(System.UInt32[] indices, System.UInt32 numItems, System.Int32 testMode, SevenZipExtractor.LibAdapter.IArchiveExtractCallback extractCallback)
        {
            System.IntPtr extractCallback_ = System.IntPtr.Zero;
            System.Int32 __result__;
            extractCallback_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.IArchiveExtractCallback>(extractCallback);
            fixed (void *indices_ = indices)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, indices_, numItems, testMode, (void *)extractCallback_, (*(void ***)this._nativePointer)[7 + SevenZipHandle.FuncOffset]);
            System.GC.KeepAlive(extractCallback);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "propID">No documentation.</param>
        /// <param name = "value">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetArchiveProperty([In] PROPID propID,[In] PROPVARIANT* value)</unmanaged>
        /// <unmanaged-short>IInArchive::GetArchiveProperty</unmanaged-short>
        public unsafe System.Int32 GetArchiveProperty(SevenZipExtractor.LibAdapter.ItemPropId propID, SevenZipExtractor.LibAdapter.PropVariant value)
        {
            System.Int32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, unchecked ((System.UInt32)propID), &value, (*(void ***)this._nativePointer)[8 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "numProps">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetNumberOfProperties([In] unsigned int* numProps)</unmanaged>
        /// <unmanaged-short>IInArchive::GetNumberOfProperties</unmanaged-short>
        public unsafe System.Int32 GetNumberOfProperties(System.UInt32 numProps)
        {
            System.Int32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, &numProps, (*(void ***)this._nativePointer)[9 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "name">No documentation.</param>
        /// <param name = "ropIDRef">No documentation.</param>
        /// <param name = "varType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetPropertyInfo([In] unsigned int index,[In] wchar_t** name,[In] PROPID* propID,[In] unsigned short* varType)</unmanaged>
        /// <unmanaged-short>IInArchive::GetPropertyInfo</unmanaged-short>
        public unsafe System.Int32 GetPropertyInfo(System.UInt32 index, System.String name, SevenZipExtractor.LibAdapter.ItemPropId ropIDRef, System.UInt16 varType)
        {
            System.Int32 __result__;
            fixed (char *name_ = name)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, (void *)name_, &ropIDRef, &varType, (*(void ***)this._nativePointer)[10 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "numProps">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetNumberOfArchiveProperties([In] unsigned int* numProps)</unmanaged>
        /// <unmanaged-short>IInArchive::GetNumberOfArchiveProperties</unmanaged-short>
        public unsafe System.Int32 GetNumberOfArchiveProperties(System.UInt32 numProps)
        {
            System.Int32 __result__;
            __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, &numProps, (*(void ***)this._nativePointer)[11 + SevenZipHandle.FuncOffset]);
            return __result__;
        }

        /// <summary>
        /// No documentation.
        /// </summary>
        /// <param name = "index">No documentation.</param>
        /// <param name = "name">No documentation.</param>
        /// <param name = "ropIDRef">No documentation.</param>
        /// <param name = "varType">No documentation.</param>
        /// <returns>No documentation.</returns>
        /// <unmanaged>LONG IInArchive::GetArchivePropertyInfo([In] unsigned int index,[In] wchar_t** name,[In] PROPID* propID,[In] unsigned short* varType)</unmanaged>
        /// <unmanaged-short>IInArchive::GetArchivePropertyInfo</unmanaged-short>
        public unsafe System.Int32 GetArchivePropertyInfo(System.UInt32 index, System.String name, SevenZipExtractor.LibAdapter.ItemPropId ropIDRef, System.UInt16 varType)
        {
            System.Int32 __result__;
            fixed (char *name_ = name)
                __result__ = SevenZipExtractor.LocalInterop.CalliStdCallint(this._nativePointer, index, (void *)name_, &ropIDRef, &varType, (*(void ***)this._nativePointer)[12 + SevenZipHandle.FuncOffset]);
            return __result__;
        }
    }

    class IInArchiveGetStreamShadow : ComObjectShadow
    {
        protected unsafe class IInArchiveGetStreamVtbl : ComObjectShadow.ComObjectVtbl
        {
            public IInArchiveGetStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new GetStreamDelegate(GetStream));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int GetStreamDelegate(System.IntPtr thisObject, System.UInt32 arg0, void *arg1);
            private static unsafe int GetStream(System.IntPtr thisObject, System.UInt32 param0, void *param1)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt32 index = default (System.UInt32);
                    index = (System.UInt32)param0;
                    ref System.IntPtr stream_ = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.IntPtr>(param1);
                    SevenZipExtractor.LibAdapter.ISequentialInStream stream;
                    IInArchiveGetStream @this = (IInArchiveGetStream)ToShadow<SevenZipExtractor.LibAdapter.IInArchiveGetStreamShadow>(thisObject).Callback;
                    __result__ = @this.GetStream(index, out stream);
                    stream_ = SharpGen.Runtime.CppObject.ToCallbackPtr<SevenZipExtractor.LibAdapter.ISequentialInStream>(stream);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IInArchiveGetStream @this = (IInArchiveGetStream)ToShadow<SevenZipExtractor.LibAdapter.IInArchiveGetStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IInArchiveGetStreamShadow.IInArchiveGetStreamVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IInArchiveGetStreamShadow))]
    public partial interface IInArchiveGetStream : SharpGen.Runtime.IUnknown
    {
        System.Int32 GetStream(System.UInt32 index, out SevenZipExtractor.LibAdapter.ISequentialInStream stream);
    }

    class IInStreamShadow : ISequentialInStreamShadow
    {
        protected unsafe class IInStreamVtbl : ISequentialInStreamShadow.ISequentialInStreamVtbl
        {
            public IInStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new SeekDelegate(Seek));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SeekDelegate(System.IntPtr thisObject, long arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Seek(System.IntPtr thisObject, long param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.Int64 offset = default (System.Int64);
                    offset = (System.Int64)param0;
                    System.UInt32 seekOrigin = default (System.UInt32);
                    seekOrigin = (System.UInt32)param1;
                    ref System.UInt64 newPosition = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param2);
                    IInStream @this = (IInStream)ToShadow<SevenZipExtractor.LibAdapter.IInStreamShadow>(thisObject).Callback;
                    __result__ = @this.Seek(offset, seekOrigin, ref newPosition);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IInStream @this = (IInStream)ToShadow<SevenZipExtractor.LibAdapter.IInStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IInStreamShadow.IInStreamVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IInStreamShadow))]
    public partial interface IInStream : SevenZipExtractor.LibAdapter.ISequentialInStream
    {
        System.Int32 Seek(System.Int64 offset, System.UInt32 seekOrigin, ref System.UInt64 newPosition);
    }

    class IOutStreamShadow : SevenZipExtractor.LibAdapter.ISequentialOutStreamShadow
    {
        protected unsafe class IOutStreamVtbl : ISequentialOutStreamShadow.ISequentialOutStreamVtbl
        {
            public IOutStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 2)
            {
                AddMethod(new SeekDelegate(Seek));
                AddMethod(new SetSizeDelegate(SetSize));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SeekDelegate(System.IntPtr thisObject, long arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Seek(System.IntPtr thisObject, long param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.Int64 offset = default (System.Int64);
                    offset = (System.Int64)param0;
                    System.UInt32 seekOrigin = default (System.UInt32);
                    seekOrigin = (System.UInt32)param1;
                    ref System.UInt64 newPosition = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param2);
                    IOutStream @this = (IOutStream)ToShadow<SevenZipExtractor.LibAdapter.IOutStreamShadow>(thisObject).Callback;
                    __result__ = @this.Seek(offset, seekOrigin, ref newPosition);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IOutStream @this = (IOutStream)ToShadow<SevenZipExtractor.LibAdapter.IOutStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetSizeDelegate(System.IntPtr thisObject, System.UInt64 arg0);
            private static unsafe int SetSize(System.IntPtr thisObject, System.UInt64 param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt64 newSize = default (System.UInt64);
                    newSize = (System.UInt64)param0;
                    IOutStream @this = (IOutStream)ToShadow<SevenZipExtractor.LibAdapter.IOutStreamShadow>(thisObject).Callback;
                    __result__ = @this.SetSize(newSize);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IOutStream @this = (IOutStream)ToShadow<SevenZipExtractor.LibAdapter.IOutStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IOutStreamShadow.IOutStreamVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IOutStreamShadow))]
    public partial interface IOutStream : SevenZipExtractor.LibAdapter.ISequentialOutStream
    {
        System.Int32 Seek(System.Int64 offset, System.UInt32 seekOrigin, ref System.UInt64 newPosition);
        System.Int32 SetSize(System.UInt64 newSize);
    }

    class IProgressShadow : ComObjectShadow
    {
        protected unsafe class IProgressVtbl : ComObjectShadow.ComObjectVtbl
        {
            public IProgressVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 2)
            {
                AddMethod(new SetTotalDelegate(SetTotal));
                AddMethod(new SetCompletedDelegate(SetCompleted));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetTotalDelegate(System.IntPtr thisObject, System.UInt64 arg0);
            private static unsafe int SetTotal(System.IntPtr thisObject, System.UInt64 param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt64 total = default (System.UInt64);
                    total = (System.UInt64)param0;
                    IProgress @this = (IProgress)ToShadow<SevenZipExtractor.LibAdapter.IProgressShadow>(thisObject).Callback;
                    __result__ = @this.SetTotal(total);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IProgress @this = (IProgress)ToShadow<SevenZipExtractor.LibAdapter.IProgressShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int SetCompletedDelegate(System.IntPtr thisObject, void *arg0);
            private static unsafe int SetCompleted(System.IntPtr thisObject, void *param0)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.UInt64? completeValue = param0 != null ? System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt64>(param0) : null;
                    IProgress @this = (IProgress)ToShadow<SevenZipExtractor.LibAdapter.IProgressShadow>(thisObject).Callback;
                    __result__ = @this.SetCompleted(completeValue);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    IProgress @this = (IProgress)ToShadow<SevenZipExtractor.LibAdapter.IProgressShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.IProgressShadow.IProgressVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.IProgressShadow))]
    public partial interface IProgress : SharpGen.Runtime.IUnknown
    {
        System.Int32 SetTotal(System.UInt64 total);
        System.Int32 SetCompleted(System.UInt64? completeValue);
    }

    class ISequentialInStreamShadow : ComObjectShadow
    {
        protected unsafe class ISequentialInStreamVtbl : ComObjectShadow.ComObjectVtbl
        {
            public ISequentialInStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new ReadDelegate(Read));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int ReadDelegate(System.IntPtr thisObject, void *arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Read(System.IntPtr thisObject, void *param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.IntPtr data = default (System.IntPtr);
                    data = (System.IntPtr)param0;
                    System.UInt32 size = default (System.UInt32);
                    size = (System.UInt32)param1;
                    ref System.UInt32 rocessedSizeRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt32>(param2);
                    ISequentialInStream @this = (ISequentialInStream)ToShadow<SevenZipExtractor.LibAdapter.ISequentialInStreamShadow>(thisObject).Callback;
                    __result__ = @this.Read(data, size, ref rocessedSizeRef);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ISequentialInStream @this = (ISequentialInStream)ToShadow<SevenZipExtractor.LibAdapter.ISequentialInStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.ISequentialInStreamShadow.ISequentialInStreamVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.ISequentialInStreamShadow))]
    public partial interface ISequentialInStream : SharpGen.Runtime.IUnknown
    {
        System.Int32 Read(System.IntPtr data, System.UInt32 size, ref System.UInt32 rocessedSizeRef);
    }

    class ISequentialOutStreamShadow : ComObjectShadow
    {
        protected unsafe class ISequentialOutStreamVtbl : ComObjectShadow.ComObjectVtbl
        {
            public ISequentialOutStreamVtbl(int numberOfCallbackMethods): base (numberOfCallbackMethods + 1)
            {
                AddMethod(new WriteDelegate(Write));
            }

            [System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention.Winapi)]
            private delegate int WriteDelegate(System.IntPtr thisObject, void *arg0, System.UInt32 arg1, void *arg2);
            private static unsafe int Write(System.IntPtr thisObject, void *param0, System.UInt32 param1, void *param2)
            {
                try
                {
                    System.Int32 __result__ = default (System.Int32);
                    System.IntPtr data = default (System.IntPtr);
                    data = (System.IntPtr)param0;
                    System.UInt32 size = default (System.UInt32);
                    size = (System.UInt32)param1;
                    ref System.UInt32 rocessedSizeRef = ref System.Runtime.CompilerServices.Unsafe.AsRef<System.UInt32>(param2);
                    ISequentialOutStream @this = (ISequentialOutStream)ToShadow<SevenZipExtractor.LibAdapter.ISequentialOutStreamShadow>(thisObject).Callback;
                    __result__ = @this.Write(data, size, ref rocessedSizeRef);
                    return __result__;
                }
                catch (System.Exception __exception__)
                {
                    ISequentialOutStream @this = (ISequentialOutStream)ToShadow<SevenZipExtractor.LibAdapter.ISequentialOutStreamShadow>(thisObject).Callback;
                    (@this as SharpGen.Runtime.IExceptionCallback)?.RaiseException(__exception__);
                    return default (System.Int32);
                }
            }
        }

        protected override SharpGen.Runtime.CppObjectVtbl Vtbl
        {
            get;
        }

        = new SevenZipExtractor.LibAdapter.ISequentialOutStreamShadow.ISequentialOutStreamVtbl(0);
    }

    [SharpGen.Runtime.ShadowAttribute(typeof (SevenZipExtractor.LibAdapter.ISequentialOutStreamShadow))]
    public partial interface ISequentialOutStream : SharpGen.Runtime.IUnknown
    {
        System.Int32 Write(System.IntPtr data, System.UInt32 size, ref System.UInt32 rocessedSizeRef);
    }
}